# Ultra-secure and optimized frontend with latest Node.js LTS
FROM node:20-alpine3.19 as deps

# Add security labels
LABEL security.non-root=true
LABEL security.no-new-privileges=true

# Install security updates
RUN apk update && apk upgrade && apk add --no-cache dumb-init

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001

# Copy package files
COPY package.json package-lock.json* ./

# Install dependencies with audit
RUN npm ci --only=production --frozen-lockfile --audit fix \
    && npm cache clean --force

# Build stage
FROM node:20-alpine3.19 as build

WORKDIR /app

# Install security updates
RUN apk update && apk upgrade

# Copy dependencies and package files
COPY --from=deps /app/node_modules ./node_modules
COPY package.json package-lock.json* ./

# Install all dependencies
RUN npm ci --frozen-lockfile

# Copy source and build
COPY . .
ENV NODE_ENV=production
RUN npm run build && npm prune --production

# Production with enhanced nginx
FROM nginx:1.25-alpine as production

# Install security updates and tools
RUN apk update && apk upgrade && \
    apk add --no-cache curl tzdata && \
    rm -rf /var/cache/apk/*

# Create nginx user
RUN addgroup -g 101 -S nginx && \
    adduser -S nginx -u 101 -G nginx

# Copy built assets
COPY --from=build --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Copy optimized nginx config
COPY --chown=nginx:nginx nginx.conf /etc/nginx/conf.d/default.conf

# Remove default config and create necessary directories
RUN rm -f /etc/nginx/conf.d/default.conf.orig && \
    mkdir -p /var/cache/nginx /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown nginx:nginx /var/run/nginx.pid

# Set timezone
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

USER nginx

EXPOSE 8080

# Enhanced health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
